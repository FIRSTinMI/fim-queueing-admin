@using Microsoft.AspNetCore.Mvc.TagHelpers
@using fim_queueing_admin.Data
@using fim_queueing_admin.Controllers
@using Microsoft.EntityFrameworkCore
@model fim_queueing_admin.Controllers.CartController.CartManageModel
@inject FimDbContext DbContext
@{
  ViewData["Title"] = "Manage Cart";
}

<div class="container">
  <div class="text-center">
    <h1 class="display-4">Manage Cart</h1>
  </div>
  @{
    var NUM_STREAM_TABS = 3;
    Cart? cart = null;
    if (ViewData["id"] is not null)
    {
      cart = await DbContext.Carts.SingleOrDefaultAsync(c => c.Id == (Guid)ViewData["id"]!);
      if (cart is not null)
      {
        ViewData.Model = new CartController.CartManageModel(cart);

        if (ViewData.Model.StreamInfos.Count < NUM_STREAM_TABS)
        {
          ViewData.Model.StreamInfos.AddRange(Enumerable.Repeat(new CartController.StreamInfoManageModel(), NUM_STREAM_TABS - ViewData.Model.StreamInfos.Count));
        }
      }
    }
  }
  
  <div class="card my-3">
    <h5 class="card-header">Assist</h5>
    <div class="card-body">
      @if (!string.IsNullOrWhiteSpace(cart?.TeamviewerId))
      {
        <div class="text-center">
          <a href="teamviewer10://control?device=@cart.TeamviewerId" class="btn btn-primary">Open TeamViewer</a>
        </div>
      }
      else
      {
        <div class="alert alert-secondary" role="alert">
          This cart does not have a TeamViewer ID set.
        </div>
      }
    </div>
  </div>
  
  <h2>Information</h2>
  <form asp-action="Manage" method="post">
    <div asp-validation-summary="All" class="text-danger"></div>

    <div class="form-group mb-2">
      <label asp-for="Name">Name</label>
      <input asp-for="Name" class="form-control" type="text"/>
    </div>
    <div class="form-group mb-2">
      <label asp-for="TeamViewerId">TeamViewer ID</label>
      <input asp-for="TeamViewerId" class="form-control" type="text"/>
    </div>
    
    <h3 class="mt-3">Stream Keys</h3>
    <div class="card">
      <div class="card-body">
        <ul class="nav nav-tabs" id="nav-streams" role="tablist">
          @for (var i = 0; i < NUM_STREAM_TABS; i++)
          {
            <li class="nav-item">
              <a
                class="nav-link @(i == 0 ? "active" : string.Empty)"
                id="stream-@(i)-tab"
                data-bs-toggle="tab"
                data-bs-target="#stream-@(i)"
                type="button"
                role="tab"
                aria-controls="stream-@(i)"
                aria-selected="@(i == 0 ? "true" : "false")">
                @(i + 1)
              </a>
            </li>
          }
        </ul>
        <div class="tab-content" id="streams-content">
          @for (var i = 0; i < NUM_STREAM_TABS; i++)
          {
            <div class="tab-pane fade @(i == 0 ? "show active" : string.Empty)" id="stream-@(i)" role="tabpanel" aria-labelledby="stream-@(i)-tab">
              <div class="form-group mb-2">
                <label asp-for="@Model!.StreamInfos[i].RtmpUrl">RTMP URL</label>
                <input asp-for="@Model!.StreamInfos[i].RtmpUrl" class="form-control" type="text"/>
              </div>
              <div class="form-group mb-2">
                <label asp-for="@Model!.StreamInfos[i].RtmpKey">RTMP Stream Key <button class="btn btn-link" type="button" onclick="toggleStreamKey(this)">Show</button></label>
                <input asp-for="@Model!.StreamInfos[i].RtmpKey" class="form-control streamKey" type="password" value="@(Model?.StreamInfos[i].RtmpKey ?? "")"/>
              </div>
              <div class="form-check">
                <input type="checkbox" class="form-check-input" asp-for="@Model!.StreamInfos[i].Enabled">
                <label class="form-check-label" asp-for="@Model!.StreamInfos[i].Enabled">Enabled?</label>
              </div>
            </div>
          }
        </div>
      </div>
    </div>
    
    <button class="btn btn-primary mt-2" type="submit">Save</button>
  </form>

  @if (cart is not null)
  {
    <h2 class="mt-3">Auth Information</h2>
    <dl>
      <dt>Auth Token <button class="btn btn-link" onclick="toggleAuthToken(this)">Show</button></dt>
      <dd>
        <input id="authToken" type="password" readonly value="@(cart.Configuration?.AuthToken)" />
      </dd>
    </dl>
  }
  
  <style>
    #authToken {
      all: unset;
      width: 100%;
    }
  </style>
  
  <script>
    function showHideInput(inputEl, buttonEl) {
      if (inputEl.type === "password") {
        inputEl.type = "text";
        buttonEl.innerText = "Hide";
      } else {
        inputEl.type = "password";
        buttonEl.innerText = "Show";
      }
    }
    
    function toggleAuthToken(el) {
      const inputElement = document.getElementById("authToken");
      showHideInput(inputElement, el);
    }
    
    function toggleStreamKey(el) {
      const inputElements = document.getElementsByClassName("streamKey");
      [...inputElements].forEach(e => {
        showHideInput(e, el);
      });
    }
  </script>
</div>
